背景：
想必大家都知道，最近初链在进行超级节点竞选，不管是小团队，还是大资本，都在加入竞选。那么，为什么初链需要做超级节点竞选呢？
带着这个问题，我们今天来通俗易懂地讲讲两种区块链的共识算法：POW和PBFT。因为我们的初链正是创新地结合了这两个共识算法，来实现高效的底层公链。

第一节：PoW——也叫工作量证明。
想必大家对这个不陌生。区块链的开山鼻祖——比特币，正是用了这个共识算法来实现挖矿的。这个共识算法的好处是什么，就是简单暴力，通过复式记账的方式，实现交易账本的记录。缺点是啥呢，就是资源消耗大，交易速度慢。因为工作量证明说白了，就是要发动矿机去寻找小于某个难度值的随机数。满足条件的随机数随着全网挖矿算力的提升，也逐步提升，普通的电脑已经几乎无法挖到比特币了。大量的电力等资源消耗也带来很多能源浪费的质疑，一点都不低碳呀。再者，比特币的挖矿节点从早期的独立矿工，逐步演化成了矿池，大的算力矿池，掌握了全网大量的算力，一旦出现一家独大的情况，则会对整个网络造成共识攻击，也就是我们说的51%算力攻击。因此，越来越多人，尝试去寻找新的共识算法，从而达到：减少消耗、提升速度、继续保证安全性。

第二节：PBFT——也叫拜占庭容错。
这个问题本身其实比解决方案还要难理解。那我下面还是用一个例子，通俗地讲解一下，希望大家都能看懂。
其实这个拜占庭容错，以前是用来解决一个问题的，即“如何使远距离通信的人们对一个提案达成一致意见”。

举个例子，比如说我是一个愚昧的国王，没有自己的判断力，我不知道应该对敌国进攻还是投降好。我有一些大臣，我希望听从他们的意见做出决定，但是他们现在都离我很远，我只能通过飞鸽传书的方式告知他们目前的问题，得到他们的选择。然而，可能出现大臣叛变，故意提出相反的观点（错误的节点），也可能出现鸽子在传输过程中飞错了，我没有得到该大臣的选择（网络堵塞）。PBFT可以保证如果我有3f+1的大臣的话，即使其中有f个大臣叛变或者没有响应，我依然可以得出共识的正确结果。

这里一个核心问题就是，为什么有f个节点未响应或出错时，为了保证系统的正常，我需要总共有3f+1个节点进行投票。

同样用国王的例子，假设除了我（国王）一共有n个大臣，我知道其中有f个大臣是叛徒或者未响应，所以我一定要能从n-f个大臣的回应中进行判断（如果上述f个大臣都是未响应）。然而由于是飞鸽传书（异步传输），所以当我陆续收到n-f个传来的消息后，我并不知道之后是否还会有新的消息传来。因为如果f个有问题的大臣都是未响应，那么我将不会收到新的消息，如果其中有大臣是叛徒，我之后还会收到消息，但作为国王的现在不知道是哪种情况，却需要立刻作出进攻还是投降的判断。

最坏的情况下，剩下的f个大臣都是好人，只是鸽子飞得慢我还没收到消息，也就是说我收到消息的n-f的大臣中有f个大臣都是叛徒，即f个叛徒和n-2f个好人。由于多数者胜，所以只有当n-2f>f的情况下，作为国王的我会做出正确的决定，即n>3f，n最小需要取3f+1。

这也就是为什么PBFT能保证有3f+1节点投票时，允许f个节点未响应或者出现故障投相反票。

第三节：POW+PBFT，初链采用的共识算法 
我们现在来结合一下最近初链正在进行的超级节点竞选。由于初链同时采用了这两种共识算法，作为一种基于混合共识的公链，可以在交易速度、安全性、能耗上得到一定的平衡。首先，标准节点进行POW，也就是类似比特币的算力挖矿。然后全节点既可以进行POW算力挖矿，还可以进行PBFT的投票，从而得到双份挖矿奖励。同时，由于节点众多，只要节点的大多数都是“好的”节点，那初链的网络就会高效和稳定。

总结：
讲到这里，想必大家也理解了在初链中，节点的重要性，以及每个节点需要承担什么样的职责。作为社区的一员，我也希望自己可以起到宣传的作用，让更多人了解什么是区块链的共识算法，以及如何将不同的共识算法进行融合创新，开发出更好更完善的区块链。
